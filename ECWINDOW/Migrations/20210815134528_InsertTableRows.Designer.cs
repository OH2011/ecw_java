// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ecw.Data;

namespace ECWINDOW.Migrations
{
    [DbContext(typeof(ecwContext))]
    [Migration("20210815134528_InsertTableRows")]
    partial class InsertTableRows
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:Collation", "Japanese_CI_AS")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.9")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ecw.Models.TmBrand", b =>
                {
                    b.Property<string>("BrandCd")
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("varchar(4)")
                        .HasColumnName("brand_cd");

                    b.Property<string>("BrandName")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("brand_name")
                        .HasDefaultValueSql("('')");

                    b.Property<string>("BrandNameKana")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("brand_name_kana");

                    b.Property<string>("InsertBy")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("insert_by");

                    b.Property<DateTime>("InsertTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("insert_time")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("update_by");

                    b.Property<DateTime>("UpdateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("update_time")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("BrandCd");

                    b.ToTable("tm_brand");
                });

            modelBuilder.Entity("ecw.Models.TmItem", b =>
                {
                    b.Property<string>("ItemCd")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("item_cd");

                    b.Property<string>("BrandCd")
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("varchar(4)")
                        .HasColumnName("brand_cd");

                    b.Property<string>("DispFlg")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("disp_flg")
                        .HasDefaultValueSql("('1')");

                    b.Property<string>("InsertBy")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("insert_by");

                    b.Property<DateTime>("InsertTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("insert_time")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("ItemCategory1Cd")
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("varchar(4)")
                        .HasColumnName("item_category1_cd");

                    b.Property<string>("ItemCategory2Cd")
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("varchar(4)")
                        .HasColumnName("item_category2_cd");

                    b.Property<string>("ItemImage1")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("item_image1");

                    b.Property<string>("ItemImageRefDiv")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("item_image_ref_div")
                        .HasDefaultValueSql("('1')");

                    b.Property<string>("ItemName1")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("item_name1")
                        .HasDefaultValueSql("('')");

                    b.Property<string>("ItemName2")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("item_name2");

                    b.Property<string>("JanCd")
                        .HasMaxLength(13)
                        .IsUnicode(false)
                        .HasColumnType("varchar(13)")
                        .HasColumnName("jan_cd");

                    b.Property<string>("ModelNumber")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("varchar(40)")
                        .HasColumnName("model_number");

                    b.Property<string>("StatusCd")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2)")
                        .HasColumnName("status_cd")
                        .HasDefaultValueSql("('00')");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("update_by");

                    b.Property<DateTime>("UpdateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("update_time")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("ItemCd");

                    b.ToTable("tm_item");
                });

            modelBuilder.Entity("ecw.Models.TmItemCategory1", b =>
                {
                    b.Property<string>("ItemCategory1Cd")
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("varchar(4)")
                        .HasColumnName("item_category1_cd");

                    b.Property<string>("InsertBy")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("insert_by");

                    b.Property<DateTime>("InsertTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("insert_time")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("ItemCategory1Name")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("item_category1_name")
                        .HasDefaultValueSql("('')");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("update_by");

                    b.Property<DateTime>("UpdateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("update_time")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("ItemCategory1Cd");

                    b.ToTable("tm_item_category1");
                });

            modelBuilder.Entity("ecw.Models.TmItemCategory2", b =>
                {
                    b.Property<string>("ItemCategory1Cd")
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("varchar(4)")
                        .HasColumnName("item_category1_cd");

                    b.Property<string>("ItemCategory2Cd")
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("varchar(4)")
                        .HasColumnName("item_category2_cd");

                    b.Property<string>("InsertBy")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("insert_by");

                    b.Property<DateTime>("InsertTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("insert_time")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("ItemCategory2Name")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("item_category2_name")
                        .HasDefaultValueSql("('')");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("update_by");

                    b.Property<DateTime>("UpdateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("update_time")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("ItemCategory1Cd", "ItemCategory2Cd");

                    b.ToTable("tm_item_category2");
                });

            modelBuilder.Entity("ecw.Models.TmItemPrice", b =>
                {
                    b.Property<string>("ItemCd")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("item_cd");

                    b.Property<string>("InsertBy")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("insert_by");

                    b.Property<DateTime>("InsertTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("insert_time")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<decimal>("NoTaxRetailPrice")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(19,4)")
                        .HasDefaultValue(0m)
                        .HasColumnName("no_tax_retail_price");

                    b.Property<decimal>("NoTaxWholesalePrice")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(19,4)")
                        .HasDefaultValue(0m)
                        .HasColumnName("no_tax_wholesale_price");

                    b.Property<string>("TaxDivCd")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2)")
                        .HasColumnName("tax_div_cd")
                        .HasDefaultValueSql("('00')");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("update_by");

                    b.Property<DateTime>("UpdateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("update_time")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("ItemCd");

                    b.ToTable("tm_item_price");
                });

            modelBuilder.Entity("ecw.Models.TmItemStatus", b =>
                {
                    b.Property<string>("StatusCd")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2)")
                        .HasColumnName("status_cd");

                    b.Property<string>("InsertBy")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("insert_by");

                    b.Property<DateTime>("InsertTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("insert_time")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("StatusName")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("status_name")
                        .HasDefaultValueSql("('')");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("update_by");

                    b.Property<DateTime>("UpdateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("update_time")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("StatusCd");

                    b.ToTable("tm_item_status");
                });

            modelBuilder.Entity("ecw.Models.TmItemStock", b =>
                {
                    b.Property<string>("ItemCd")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("item_cd");

                    b.Property<string>("InsertBy")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("insert_by");

                    b.Property<DateTime>("InsertTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("insert_time")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<decimal>("StockNum")
                        .HasColumnType("numeric(19,4)")
                        .HasColumnName("stock_num");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("update_by");

                    b.Property<DateTime>("UpdateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("update_time")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("ItemCd");

                    b.ToTable("tm_item_stock");
                });

            modelBuilder.Entity("ecw.Models.TmMessage", b =>
                {
                    b.Property<string>("MsgCd")
                        .HasMaxLength(80)
                        .IsUnicode(false)
                        .HasColumnType("varchar(80)")
                        .HasColumnName("msg_cd");

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("description");

                    b.Property<string>("InsertBy")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("insert_by");

                    b.Property<DateTime>("InsertTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("insert_time")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("MsgVal")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("msg_val")
                        .HasDefaultValueSql("('')");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("update_by");

                    b.Property<DateTime>("UpdateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("update_time")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("MsgCd");

                    b.ToTable("tm_message");
                });

            modelBuilder.Entity("ecw.Models.TmSystemSetting", b =>
                {
                    b.Property<string>("SsId")
                        .HasMaxLength(6)
                        .IsUnicode(false)
                        .HasColumnType("varchar(6)")
                        .HasColumnName("ss_id");

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("description");

                    b.Property<string>("InsertBy")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("insert_by");

                    b.Property<DateTime>("InsertTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("insert_time")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("SsCd")
                        .IsRequired()
                        .HasMaxLength(80)
                        .IsUnicode(false)
                        .HasColumnType("varchar(80)")
                        .HasColumnName("ss_cd");

                    b.Property<string>("SsName")
                        .IsRequired()
                        .HasMaxLength(80)
                        .IsUnicode(false)
                        .HasColumnType("varchar(80)")
                        .HasColumnName("ss_name");

                    b.Property<string>("SsVal")
                        .HasMaxLength(4000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(4000)")
                        .HasColumnName("ss_val");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("update_by");

                    b.Property<DateTime>("UpdateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("update_time")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("SsId");

                    b.HasIndex("SsCd")
                        .IsUnique()
                        .HasDatabaseName("UQ__tm_syste__A44515E4113160AE");

                    b.ToTable("tm_system_setting");
                });

            modelBuilder.Entity("ecw.Models.TmTaxDiv", b =>
                {
                    b.Property<string>("TaxDivCd")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2)")
                        .HasColumnName("tax_div_cd");

                    b.Property<string>("InsertBy")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("insert_by");

                    b.Property<DateTime>("InsertTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("insert_time")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("TaxName")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("tax_name")
                        .HasDefaultValueSql("('')");

                    b.Property<decimal>("TaxRate")
                        .HasColumnType("numeric(19,4)")
                        .HasColumnName("tax_rate");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("update_by");

                    b.Property<DateTime>("UpdateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("update_time")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("TaxDivCd");

                    b.ToTable("tm_tax_div");
                });

            modelBuilder.Entity("ecw.Models.TtOrderHistory", b =>
                {
                    b.Property<string>("OrderNo")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("order_no");

                    b.Property<int>("RecordNo")
                        .HasColumnType("int")
                        .HasColumnName("record_no");

                    b.Property<string>("InsertBy")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("insert_by");

                    b.Property<DateTime>("InsertTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("insert_time")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("ItemCd")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("item_cd")
                        .HasDefaultValueSql("('')");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime")
                        .HasColumnName("order_date");

                    b.Property<decimal>("OrderQuantity")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(19,4)")
                        .HasDefaultValue(0m)
                        .HasColumnName("order_quantity");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("update_by");

                    b.Property<DateTime>("UpdateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("update_time")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("OrderNo", "RecordNo");

                    b.ToTable("tt_order_history");
                });
#pragma warning restore 612, 618
        }
    }
}
